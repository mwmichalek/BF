@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using BF.Common.Events
@using BF.Common.Ids
@using Newtonsoft.Json

<h1>Hello, world!</h1>

This app sucks.


USER:
<input placeholder="Type User's Name" @bind="User" />
MESSAGE:
<input placeholder="Type Message" @bind="Message" />
<button @onclick="SendMessage">SEND</button>

@foreach (var message in messages) {
    <h3>@message</h3>
    <br />
}

@code {

    [Inject]
    HubConnectionBuilder _hubConnectionBuilder { get; set; }
    HubConnection connection;
    string User = "";
    string Message = "";
    IList<string> messages = new List<string>();

    protected override async Task OnInitializedAsync() {
        //connection = _hubConnectionBuilder.WithUrl("https://localhost:44355/bfHub").Build();
        connection = _hubConnectionBuilder.WithUrl("https://emrsd-ws-bf.azurewebsites.net/bfHub").Build();

        connection.On<string, string>("ReceiveMessage", this.OnReceiveMessage);
        connection.On<string>("TemperatureChangeOccured", this.TemperatureChangeOccured);
        await connection.StartAsync();

    }

    Task OnReceiveMessage(string name, string message) {
        messages.Add(name + " : " + message);
        StateHasChanged();
        return Task.CompletedTask;
    }

    Task TemperatureChangeOccured(string temperatureChangeJson) {
        var temperatureChange = JsonConvert.DeserializeObject<TemperatureChange>(temperatureChangeJson);
        messages.Add($"{temperatureChange.Id} - {temperatureChange.Value} {temperatureChange.PercentChange}");
        StateHasChanged();
        return Task.CompletedTask;
    }

    async Task SendMessage() {
        await connection.InvokeAsync("SendMessage", User, Message);
    }
}





